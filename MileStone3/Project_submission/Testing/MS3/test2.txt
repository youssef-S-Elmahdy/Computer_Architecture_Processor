00000000000100000000001010010011; //addi x5, x0, 1 # x = 1
00000000000000000000001100010011; //addi x6, x0, 0 # i = 0
00000000011000000000001110010011; //addi x7, x0, 6 # y = 6
00000000011100101000101001100011; //beq x5, x7, endStore # i == y?

00000000010100110010000000100011; //sw x5, 0(x6)
00000000010000110000001100010011; //addi x6, x6, 4
00000000000100101000001010010011; //addi x5, x5, 1
11111110000000000000100011100011; //beq x0, x0, store # loop back

00000000000000000000001010010011; //addi x5, x0, 0 # i = 0
00000000000000000000001100010011; //addi x6, x0, 0 # *i

00000001000000000000001110010011; //addi x7, x0, 16 # *(4-i)
00000000001100000000111000010011; //addi x8, x0, 3 # x = 3
00000011110000101000001001100011; //beq x5, x8, endSwap # i == x?
00000000000000110010111010000011; //lw x9, 0(x6) # temp1 = mem[i]
00000000000000111010111100000011; //lw x10, 0(x7) # temp2 = mem[4-i]
00000001110100111010000000100011; //sw x9, 0(x7) # mem[4-i] = temp1
00000001111000110010000000100011; //sw x10, 0(x6) # mem[i] = temp2

00000000000100101000001010010011; //addi x5, x5, 1 # i++
00000000010000110000001100010011; //addi x6, x6, 4 # *(i+1)
11111111110000111000001110010011; //addi x7, x7, -4 # *(4-i-1)
11111110000000000000000011100011; //beq x0, x0, swap # loop back